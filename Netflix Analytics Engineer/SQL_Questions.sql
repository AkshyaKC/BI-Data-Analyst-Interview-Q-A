-- Question 1: Identify VIP Users for Netflix 
-- Question: To better cater to its most dedicated users, Netflix would like to identify its “ VIP users ” - those who are most 
--           active in terms of the number of hours of content they watch.Write a SQL query that will retrieve the top 10 users with
--           the most watched hours in the last month.
-- Tables: 
-- users table: user_id (integer), sign_up_date (date), subscription_type (text) 
-- watching_activity table: activity_id (integer), user_id (integer), date_time (timestamp), show_id (integer), hours_watched (float) 
---------------------------------------------------------------------------------------------------------------------------------
-- Question 2: Analyzing Ratings For Netflix Shows 
-- Question: Given a table of user ratings for Netflix shows, calculate the average rating for each show within a given month.
--           Assume that there is a column for user_id,show_id, rating (out of 5 stars), and date of review.Order the results by month
--           and then by average rating (descending order).
-- Tables: 
-- show_reviews table: review_id (integer), user_id (integer), review_date (timestamp), show_id (integer),stars (integer) 
----------------------------------------------------------------------------------------------------------------------------------
-- Question 3: What does EXCEPT /MINUS SQL commands do ? 
-- Question: Explain the purpose and usage of the EXCEPT (or MINUS in some SQL dialects) SQL commands.
----------------------------------------------------------------------------------------------------
-- Question 4: Filter Netflix Users Based on Viewing History and Subscription Status 
-- Question: You are given a database of Netflix ’ s user viewing history and their current subscription status.
--           Write a SQL query to find all active customers who watched more than 10 episodes of a show called “ Stranger Things ” in the last 30 days.
--Tables: 
-- users table: user_id (integer), active (boolean) 
-- viewing_history table: user_id (integer),show_id (integer),episode_id (integer),watch_date (date) 
-- shows table: show_id (integer),show_name (text)
-----------------------------------------------------------------------------------------------------------
-- Question 5: What does it mean to denormalize a database ? 
-- Question: Explain the conceptand implications of denormalizing a database.
---------------------------------------------------------------------------------------------------------
-- Question 6: Filter and Match Customer ’ s Viewing Records 
-- Question: As a data analyst at Netflix, you are asked to analyze the customer ’ s viewing records.
--           You confirmed that Netflix is especially interested in customers who have been continuously watching a particular 
--           genre - ‘ Documentary ’ over the last month.The task is to find the name and email of those customers who have viewed 
--           more than five ‘ Documentary ’ movies within the last month.‘ Documentary ’ could be a part of a broader genre category 
--           in the genre field (for example, ‘ Documentary, History ’).Therefore,the matching pattern could occur anywhere within the string.
-- Tables: 
-- movies table: movie_id (integer), title (text), genre (text), release_year (integer) 
-- customer table: user_id (integer), name (text), email (text), last_movie_watched (integer), date_watched (date)